# Postgres datasource.
spring.datasource.url=${JDBC_DATABASE_URL_IMPWRME2}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true

# Spring.
spring.main.allow-bean-definition-overriding=true

# Spring JPA.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.check_nullability=true
spring.jpa.show-sql=false

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

# Spring session.
#spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
server.servlet.session.timeout=600

# Okta settings.
# TODO Remove Okta credentials from properties file.
okta.oauth2.issuer=https://dev-7135705.okta.com/oauth2/default
okta.oauth2.client-id=0oaub6og576sMfdyg5d6
okta.oauth2.client-secret=0cTwcJvG9Anj6nfB67zKhJtdMspRo2Y641xcPIZw
okta.oauth2.redirect-uri=/authorization-code/callback
spring.security.oauth2.client.provider.okta.user-name-attribute=email
okta.oauth2.scopes=profile,email,openid

